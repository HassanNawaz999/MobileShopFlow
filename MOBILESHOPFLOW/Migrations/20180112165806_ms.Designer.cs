// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MOBILESHOPFLOW.Models;
using System;

namespace MOBILESHOPFLOW.Migrations
{
    [DbContext(typeof(dbMobileShopContext))]
    [Migration("20180112165806_ms")]
    partial class ms
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MOBILESHOPFLOW.Models.TblCatagories", b =>
                {
                    b.Property<int>("CatagoryId")
                        .HasColumnName("Catagory_id");

                    b.Property<string>("CatagoryName")
                        .HasColumnName("Catagory_Name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Model");

                    b.HasKey("CatagoryId");

                    b.ToTable("tblCatagories");
                });

            modelBuilder.Entity("MOBILESHOPFLOW.Models.TblCustomer", b =>
                {
                    b.Property<int>("Cusotmer_id")
                        .HasColumnName("Cusotmer_id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Phone");

                    b.HasKey("Cusotmer_id");

                    b.ToTable("tblCustomer");
                });

            modelBuilder.Entity("MOBILESHOPFLOW.Models.TblItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnName("item_id");

                    b.Property<int>("CatagoryId")
                        .HasColumnName("Catagory_id");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Discription")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Image")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("Model")
                        .HasColumnName("Model#")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<double?>("Price");

                    b.Property<int?>("Quantity");

                    b.HasKey("ItemId");

                    b.ToTable("tblItem");
                });

            modelBuilder.Entity("MOBILESHOPFLOW.Models.TblPurchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .HasColumnName("Purchase_id");

                    b.Property<int>("CatagoryId")
                        .HasColumnName("Catagory_id");

                    b.Property<int?>("Items");

                    b.Property<float?>("Price");

                    b.Property<int?>("Quantity");

                    b.Property<int>("VendorId")
                        .HasColumnName("Vendor_id");

                    b.HasKey("PurchaseId");

                    b.ToTable("tblPurchase");
                });

            modelBuilder.Entity("MOBILESHOPFLOW.Models.TblSales", b =>
                {
                    b.Property<int>("SaleId")
                        .HasColumnName("Sale_id");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ItemId")
                        .HasColumnName("item_id");

                    b.Property<float?>("Price");

                    b.Property<int?>("Quantity");

                    b.HasKey("SaleId");

                    b.ToTable("tblSales");
                });

            modelBuilder.Entity("MOBILESHOPFLOW.Models.tblUser", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.Property<string>("password");

                    b.Property<string>("role");

                    b.HasKey("userId");

                    b.ToTable("tblUser");
                });

            modelBuilder.Entity("MOBILESHOPFLOW.Models.TblVendor", b =>
                {
                    b.Property<int>("VendorId")
                        .HasColumnName("Vendor_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Phone");

                    b.HasKey("VendorId");

                    b.ToTable("tblVendor");
                });
#pragma warning restore 612, 618
        }
    }
}
